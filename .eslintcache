[{"C:\\Users\\nicholas.martin\\source\\gamejamathon\\famish\\src\\reportWebVitals.js":"1","C:\\Users\\nicholas.martin\\source\\gamejamathon\\famish\\src\\App.js":"2"},{"size":362,"mtime":1607681677173,"results":"3","hashOfConfig":"4"},{"size":3482,"mtime":1607687710397,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1q04gem",{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"C:\\Users\\nicholas.martin\\source\\gamejamathon\\famish\\src\\reportWebVitals.js",[],"C:\\Users\\nicholas.martin\\source\\gamejamathon\\famish\\src\\App.js",["11"],"import Phaser from 'phaser';\nimport { useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n\n  useEffect(() => {\n    var config = {\n      type: Phaser.AUTO,\n      width: window.innerWidth,\n      height: window.innerHeight,\n      physics: {\n        default: 'arcade',\n        arcade: {\n          debug: false\n        }\n      },\n      scene: {\n          preload: preload,\n          create: create,\n          update: update\n      }\n    };\n    \n    new Phaser.Game(config);\n    \n    function preload ()\n    {\n      this.load.image('sky', 'assets/sky.png');\n      this.load.image('ground', 'assets/platform.png');\n      this.load.image('star', 'assets/star.png');\n      this.load.image('bomb', 'assets/bomb.png');\n      this.load.spritesheet('dude', \n          'assets/dude.png',\n          { frameWidth: 32, frameHeight: 48 }\n      );\n    }\n\n    var platforms;\n    var player;\n    var cursors;\n    var stars;\n    var scale = 1;\n    var maxScale = 7;\n    \n    const collectStar = (player, star) => {\n      star.disableBody(true, true);\n      scale += 1\n      const scalef = Math.tanh(scale*0.05)*maxScale;\n      player.setScale(scalef);\n    }\n\n    const eatFish = (player, fish) => {\n      fish.disableBody(true, true);\n      scale += 1\n      const scalef = Math.tanh(scale*0.05)*maxScale;\n      player.setScale(scalef);\n    }\n\n    function create ()\n    {\n      this.add.image(400, 300, 'sky').setScale(2);\n\n      platforms = this.physics.add.staticGroup();\n\n      player = this.physics.add.sprite(100, 450, 'dude');\n      player.setVelocityX(160);\n      player.setBounce(0.2);\n\n      player.setCollideWorldBounds(true);\n\n      this.anims.create({\n          key: 'left',\n          frames: this.anims.generateFrameNumbers('dude', { start: 0, end: 3 }),\n          frameRate: 10,\n          repeat: -1\n      });\n\n      this.anims.create({\n          key: 'turn',\n          frames: [ { key: 'dude', frame: 4 } ],\n          frameRate: 20\n      });\n\n      this.anims.create({\n          key: 'right',\n          frames: this.anims.generateFrameNumbers('dude', { start: 5, end: 8 }),\n          frameRate: 10,\n          repeat: -1\n      });\n\n      this.physics.add.collider(player, platforms);\n      cursors = this.input.keyboard.createCursorKeys();\n\n      stars = this.physics.add.group({\n        key: 'star',\n        repeat: 11,\n        setXY: { x: 12, y: 0, stepX: 70 }\n      });\n    \n      stars.children.iterate(function (child) {\n        child.setBounceY(Phaser.Math.FloatBetween(0.4, 0.8));\n        child.setCollideWorldBounds(true);\n      });\n      \n      this.physics.add.collider(stars, platforms);\n      this.physics.add.overlap(player, stars, collectStar, null, this);\n    }\n    \n    function update ()\n    {\n      if (cursors.left.isDown) {\n        player.setVelocityX(-160);\n        player.anims.play('left', true);\n      }\n      else if (cursors.right.isDown) {\n        player.setVelocityX(160);\n        player.anims.play('right', true);\n      }\n      else {\n        const vel = player.body.velocity;\n        player.setVelocityX(vel.x*0.99);\n        player.anims.play('turn');\n      }\n\n      if (cursors.up.isDown) {\n        player.setVelocityY(-160);\n        player.anims.play('turn', true);\n      }\n      else if (cursors.down.isDown) {\n        player.setVelocityY(160);\n        player.anims.play('turn', true);\n      } else {\n        const vel = player.body.velocity;\n        player.setVelocityY(vel.y*0.95);\n      }\n    }\n  },[]);\n\n  return <></>\n}\n\nexport default App;\n",{"ruleId":"12","severity":1,"message":"13","line":53,"column":11,"nodeType":"14","messageId":"15","endLine":53,"endColumn":18},"no-unused-vars","'eatFish' is assigned a value but never used.","Identifier","unusedVar"]